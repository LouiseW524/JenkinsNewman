{
	"id": "6d631d73-8db5-42aa-521e-224fc3650f7e",
	"name": "Taxonomy(DEV)",
	"description": "Contains all the Radar Taxonomy APIs to run DevRadar",
	"order": [],
	"folders": [
		{
			"id": "fc410524-10bf-593d-5e68-380d595eb507",
			"name": "Taxonomy(DevRadar)",
			"description": "",
			"order": [
				"2101d420-65c2-45b6-e778-36aa05537bcd",
				"09b6658b-e2c5-9a96-acab-3f0bf80172ae",
				"558edcac-c4f8-2475-519b-8cdaf9a6b2df",
				"4900bf00-ee70-f8be-5ca3-8ecb8d6a4ecf",
				"62b250ea-690c-d15f-9f82-d2671fd3698d",
				"bdf61d79-70a4-23fe-1c70-19174bf347a8",
				"02a9fe29-07ef-5f60-13df-bdb80c4d91ab",
				"43f9fe03-8dfc-0976-48b8-d67469907ed3",
				"bd1e6dcc-bebc-8a38-8e1f-b03bcdc93af9",
				"7ddc07da-6942-9b5d-7c54-f7cd6a89d3bf",
				"6b0bfa62-6f1c-70fc-3e2b-8c8542442923",
				"20e0f2c6-0001-0caf-9dfc-39a221c6fa67",
				"7fa95070-09aa-e48a-a631-82058dd26894",
				"f9b4a779-6b06-32a8-c07e-dae916f1eb16",
				"cde2cff9-15ea-ccba-7bbe-9d4f9b8f2a14",
				"18ae96db-4c11-e770-5ee4-5108a7c87301",
				"0679c1ab-3bb8-ff34-84c1-1d942474b80e",
				"446b8682-5f17-0ee8-6d10-71a442953b80",
				"861eab4d-56a6-12c9-f993-0b51ec9cbd73",
				"e27a2574-3de2-e34e-2d5b-17779cd095f3",
				"6052dd60-06a4-12cf-1753-d27591231539"
			],
			"owner": "1802157",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e"
		}
	],
	"timestamp": 1493037798563,
	"owner": "1802157",
	"public": false,
	"requests": [
		{
			"id": "02a9fe29-07ef-5f60-13df-bdb80c4d91ab",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ProductBugzillaName?productid=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037922043,
			"name": "ProductBugzillaName",
			"description": "Purpose: This gets the name of the product in Bugzilla. We store this in the Taxonomy database since they donâ€™t always necessarily match.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "0679c1ab-3bb8-ff34-84c1-1d942474b80e",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/SolutionTaxonomy?solutionName=Dynamic%20Endpoint&solutionVersion=1.0.0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \nvar listLength  = jsonData.length;\n\ntest_str = { \"items\":{\"type\" : \"string\"} };\ntest_int = { \"items\":{\"type\" : \"integer\"}};\ntest_arr = { \"items\": {\"type\" :  [\"array\", \"null\"]} };\n   \n    var integers = [jsonData.SolutionID ];\n    var strings = [jsonData.SolutionName, jsonData.SolutionPrimaryOwner, jsonData.SolutionSecondaryOwner, jsonData.SolutionVersion];\n    var arrays = [jsonData.Products];\n    \n    \n    tests[\"Valid Products Return \" ] = (tv4.validate(integers, test_int) && tv4.validate(strings, test_str) && tv4.validate(arrays, test_arr) );\n    \n\ntests[\"Found solution\"] =! responseBody.has(\"Could not find solution\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037980053,
			"name": "SolutionTaxonomy",
			"description": "Purpose: This returns the taxonomy for the give solution name/version.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "09b6658b-e2c5-9a96-acab-3f0bf80172ae",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ComponentID?solutionName=Dynamic%20Endpoint&solutionVersion=1.0.0&productName=ESP&productVersion=11.0&componentName=ESP_UX&componentVersion=11.0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_int = { \"items\":{\"type\" : \"integer\"} };\nvar integers = [jsonData.Result];\n\nif(integers > 0){\n    tests[\"Returns ComponentID as integer\" ] =  tv4.validate(integers, test_int);\n    console.log(\"Validation errors: \", tv4.error);\n  \n}\n\ntests[\"Valid Component ID Returned\"] = (integers > 0 );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037886976,
			"name": "ComponentID",
			"description": "Purpose: This gets the component ID of the component with the given name/version, contained in the given solution/product.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "18ae96db-4c11-e770-5ee4-5108a7c87301",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/SolutionNameValidation?name=Dynamic%20Endpoint",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037973394,
			"name": "SolutionNameValidation",
			"description": "Purpose: This validates that the given solution exists.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "20e0f2c6-0001-0caf-9dfc-39a221c6fa67",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/ProductVersionValidation?solutionName=Dynamic%20Endpoint&solutionVersion=2.0.0&productName=ESP&productVersion=11.3",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037953634,
			"name": "ProductVersionValidation",
			"description": "Purpose: This validates the given product version exists for the given product, contained in the given solution.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "2101d420-65c2-45b6-e778-36aa05537bcd",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ProductVersionAsString?productID=2",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Product Version as string\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037876131,
			"name": "ProductVersionAsString",
			"description": "Purpose: This gets the product version of the product with the given product ID",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "43f9fe03-8dfc-0976-48b8-d67469907ed3",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ProductID?solutionName=Dynamic%20Endpoint&solutionVersion=1.0.0&productName=ESP&productVersion=11.0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_int = { \"items\":{\"type\" : \"integer\"} };\nvar integers = [jsonData.Result];\n\nif(integers > 0){\n    tests[\"Returns ProductID as integer\" ] =  tv4.validate(integers, test_int);\n    console.log(\"Validation errors: \", tv4.error);\n  \n}\n\ntests[\"Valid Product ID Returned\"] = (integers > 0 );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037931422,
			"name": "ProductID",
			"description": "Purpose: This gets the product ID of the product with the given name/version, contained in the given solution.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "446b8682-5f17-0ee8-6d10-71a442953b80",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/SolutionVersionAsString?solutionID=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Solution Version as string\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037985274,
			"name": "SolutionVersionAsString",
			"description": "Purpose: Gets Solution version for the given solution ID",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "4900bf00-ee70-f8be-5ca3-8ecb8d6a4ecf",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ComponentShortName?componentID=6",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Components short name\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037903475,
			"name": "ComponentShortName",
			"description": "Purpose: This gets the short name of the component with the given component ID.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "558edcac-c4f8-2475-519b-8cdaf9a6b2df",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/ComponentNameValidation?solutionName=Dynamic%20Endpoint&solutionVersion=2.0.0&productName=ESP&productVersion=11.1&componentName=ESP_UX",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037898308,
			"name": "ComponentNameValidation",
			"description": "Purpose: This validates the given component name is in the given solution/product.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "6052dd60-06a4-12cf-1753-d27591231539",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/TaxonomyForClient",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody); \nvar listLength  = jsonData.length;\n\ntest_str = { \"items\":{\"type\" : \"string\"} };\n\n\nfor( var i = 0 ; i < listLength; i ++)  {\n \n    var strings = [jsonData[i].Name, jsonData[i].ID, jsonData[i].Type, jsonData[i].GUID, jsonData[i].Parent];\n\n   \n    tests[\"Valid Schema Pass \"  ] =tv4.validate(strings, test_str) ;\n}\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493038002060,
			"name": "TaxonomyForClient",
			"description": "Purpose: This returns the taxonomy data in a format that is consumable by the client. This is used in the left side navigation menu on the Radar UI.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "62b250ea-690c-d15f-9f82-d2671fd3698d",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ComponentVersionAsString?componentID=6",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Component Version as string\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037908503,
			"name": "ComponentVersionAsString",
			"description": "Purpose: This gets the component version of the component with the given component ID.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "6b0bfa62-6f1c-70fc-3e2b-8c8542442923",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ComponentLongName?componentID=7",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Components long name\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037948522,
			"name": "ComponentLongName",
			"description": "Purpose: This gets the long name of the component with the given component ID.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "7ddc07da-6942-9b5d-7c54-f7cd6a89d3bf",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/ProductNameValidation?solutionName=Dynamic%20Endpoint&solutionVersion=1.0.0&productName=ESP",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037943716,
			"name": "ProductNameValidation",
			"description": "Purpose: This validates the given product name exists within the given solution.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "7fa95070-09aa-e48a-a631-82058dd26894",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/Products",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \nvar listLength  = jsonData.length;\n\ntest_str = { \"items\":{\"type\" : \"string\"} };\ntest_strNull = { \"items\":{\"type\" : [\"string\", \"null\"] }};\ntest_int = { \"items\":{\"type\" : \"integer\"}};\ntest_arr = { \"items\": {\"type\" :  [\"array\", \"null\"]} };\n   \nfor( var i = 0 ; i < listLength; i ++)  {\n \n    var integers = [jsonData[i].ProductID, jsonData[i].SolutionID ];\n    var strings = [jsonData[i].GUID, jsonData[i].ProductLongName, jsonData[i].ProductShortName];\n    var stringNull = jsonData[i].ProductBugzillaName;\n    var arrays = [jsonData[i].Components];\n    \n    \n    tests[\"Valid Products Return \" + i ] = (tv4.validate(integers, test_int) && tv4.validate(strings, test_str) && tv4.validate(arrays, test_arr) && tv4.validate(stringNull, test_strNull ) );\n    \n}\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037957340,
			"name": "Products",
			"description": "Purpose: This allows the retrieval of the Product data from the database, along with any associated components",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "861eab4d-56a6-12c9-f993-0b51ec9cbd73",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/SolutionVersionValidation?name=Dynamic%20Endpoint&version=1.0.0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037989796,
			"name": "SolutionVersionValidation",
			"description": "Purpose: This validates the given solution version exists for the given solution name.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "bd1e6dcc-bebc-8a38-8e1f-b03bcdc93af9",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ProductLongName?productID=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Product LongName string\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037939066,
			"name": "ProductLongName",
			"description": "Purpose: This gets the long name of the product with the given product ID.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "bdf61d79-70a4-23fe-1c70-19174bf347a8",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/ComponentVersionValidation?solutionName=Dynamic%20Endpoint&solutionVersion=2.0.0&productName=ESP&productVersion=11.1&componentName=ESP_UX&componentVersion=11.1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037916902,
			"name": "ComponentVersionValidation",
			"description": "Purpose: This validates the given component version exists for the given component, contained in the given solution/product.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "cde2cff9-15ea-ccba-7bbe-9d4f9b8f2a14",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/SolutionName?solutionID=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Solution Name string\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037968446,
			"name": "SolutionName",
			"description": "Purpose: Get the solution name associated with the given solution ID",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "e27a2574-3de2-e34e-2d5b-17779cd095f3",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/Solutions",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody); \nvar listLength  = jsonData.length;\n\ntest_str = { \"items\":{\"type\" : \"string\"} };\ntest_int = { \"items\":{\"type\" : \"integer\"}};\n   \nfor( var i = 0 ; i < listLength; i ++)  {\n \n    var strings = [jsonData[i].SolutionName, jsonData[i].GUID, jsonData[i].SolutionPrimaryOwner, jsonData[i].SolutionSecondaryOwner];\n    var integers = [jsonData[i].SolutionID];\n    tests[\"Valid Schema Milestone \" + i + \" Pass\" ] = (tv4.validate(integers, test_int) && tv4.validate(strings, test_str));\n\n}\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037994886,
			"name": "Solutions",
			"description": "Purpose: This allows the retrieval of the Solution and associated Solution Version data stored in the database.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		},
		{
			"id": "f9b4a779-6b06-32a8-c07e-dae916f1eb16",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/SolutionID?solutionName=Dynamic%20Endpoint&solutionVersion=2.0.0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_int = { \"items\":{\"type\" : \"integer\"} };\nvar integers = [jsonData.Result];\n\nif(integers > 0){\n    tests[\"Returns SolutionID as integer\" ] =  tv4.validate(integers, test_int);\n    console.log(\"Validation errors: \", tv4.error);\n  \n}\n\ntests[\"Valid Solution ID Returned\"] = (integers > 0 );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037963614,
			"name": "SolutionID",
			"description": "Purpose: This gets the Solution ID of the solution with the given name/version.",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e",
			"responses": []
		}
	]
}