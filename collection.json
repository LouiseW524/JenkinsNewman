{
	"id": "41c72afe-b130-17f2-b351-b521aeacb96f",
	"name": "CMDB(DEV)",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "69dfeab2-7caa-7ded-b11f-47fff1e39f20",
			"name": "CMDB (DevRadar)",
			"description": "",
			"order": [
				"ddbf4038-e0b9-30ba-c89a-2a5fad28280a",
				"22529858-16cc-5eb1-4caa-d6be00bb566e",
				"6f20c68d-5247-ed8f-7bbc-afc7450189ac",
				"d3f4af9c-f040-b202-b572-a558412f1edd",
				"e938cb42-8040-fe8a-06bd-40a0b34b35b9",
				"8bb9431b-9506-ff89-83a5-deb184f3a369",
				"7166a49c-afe4-6eff-efdc-e6b6f54de98c",
				"c6aae8de-3f73-7ae5-6edf-0f8bce956ba6",
				"c7de04d9-d26e-51ea-e2af-2816b3b73fd5",
				"8ed5a9ba-b1b6-7175-8822-b1db8ec10d38",
				"9af2c603-34a3-0105-9378-c350b78275e6"
			],
			"owner": "1802157",
			"collectionId": "d5dc3b1b-11e2-f37d-ccc5-ba2fc4491cd3"
		}
	],
	"timestamp": 1493131509169,
	"owner": "1802157",
	"public": false,
	"requests": [
		{
			"id": "22529858-16cc-5eb1-4caa-d6be00bb566e",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8082/v1/api/bom/AntiVirusDatVer",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Build Record ID exists\"] =! responseBody.has(\"A BOM record doesn't seem to exist\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492617066294,
			"name": "AntiVirusDatVer",
			"description": "Purpose: This is called to update the AV DAT version for a build record ID’s BOM.\r\n\r\nReturns\r\n\r\n•\tHTTP 400 - if syntax error in JSON or JSON missing\r\n\r\n•\tHTTP 400 - if BOM record can't be found for the given build record ID\r\n\r\n•\tHTTP 400 - if BOM record is locked\r\n\r\n•\tHTTP 500 - if a server error occurs\r\n\r\n•\tHTTP 200 - if the record was added successfully\r\n",
			"collectionId": "41c72afe-b130-17f2-b351-b521aeacb96f",
			"responses": [],
			"rawModeData": "{\r\n\t\"BuildRecordID\": \"1\",\r\n\t\"AntiVirusDatVer\": \"5958\"\r\n}",
			"folder": "69dfeab2-7caa-7ded-b11f-47fff1e39f20"
		},
		{
			"id": "6f20c68d-5247-ed8f-7bbc-afc7450189ac",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8082/v1/api/bom/Bom?BuildRecordId=2",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \ntests[\"Response body has content\"] = (responseBody.length > 2);\ntest_schema = {\n  \n        \"items\":{\n                  \n                    \"properties\": {         \n                    \"BuildRecordID\": { \"type\": \"integer\"},\n                    \"BomType\": { \"type\": \"string\" },\n    \t\t        \"BuildSystem\": { \"type\": \"string\" },\n    \t\t        \"BuildSystemVersion\": { \"type\": \"string\"},\n                    \"AntiVirusDatVer\": { \"type\": [\"string\", \"null\"]},\n    \t\t        \"EcmMockMasterRecordId\": { \"type\": [\"integer\",\"null\"] },\n    \t\t        \"Agents\": { \"type\": [\"array\",\"null\"] },\n                    \"CodeExports\": { \"type\": [\"array\",\"null\"] },\n    \t\t        \"EcmDependencies\": { \"type\": [\"array\",\"null\"] },\n    \t\t        \"OrbitDependencies\": { \"type\": [\"array\",\"null\"]}\n                    }\n        }   \n    };\n    \n\ntests[\"Return schema valid\"] = tv4.validate(jsonData, test_schema);\nconsole.log(\"Validation errors: \", tv4.error);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493131873011,
			"name": "Bom (GET)",
			"description": "Purpose: This returns a JSON representation of a BOM record.\r\n\r\nNotes\r\n\r\nTODO: Add Solution/Product/Component details to JSON. Currently all we have is the Build Record ID.\r\n",
			"collectionId": "41c72afe-b130-17f2-b351-b521aeacb96f",
			"responses": []
		},
		{
			"id": "7166a49c-afe4-6eff-efdc-e6b6f54de98c",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8082/v1/api/bom/CodeExport",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Build Record ID exists\"] =! responseBody.has(\"A BOM record doesn't seem to exist\");\n\nif(tests[\"Build Record ID exists\"]){\n    tests[\"BOM appears to be locked\"] =! responseBody.has(\"The BOM appears to be locked\");\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492617140500,
			"name": "CodeExport",
			"description": "Purpose: This is used to add the code export details for a BOM record. It can be called multiple times for any Build Record ID.\r\n\r\nReturns\r\n\r\n•\tHTTP 400 - if syntax error in JSON or JSON missing\r\n\r\n•\tHTTP 400 - if a BOM record doesn't exist for the Build Record Id passed\r\n\r\n•\tHTTP 400 - if the BOM is locked for the Build Record Id passed\r\n\r\n•\tHTTP 500 - if a server error occurs\r\n\r\n•\tHTTP 200 - if the record was added successfully\r\n",
			"collectionId": "41c72afe-b130-17f2-b351-b521aeacb96f",
			"responses": [],
			"rawModeData": "{\r\n\t\"BuildRecordID\": \"1\",\r\n\t\"BomType\": \"SCM\",\r\n\t\"ScmType\": \"SVN\",\r\n    \"ScmVersion\": \"1.8\",\r\n    \"ScmProtocol\": \"https://\",\r\n    \"ScmServer\": \"corsource1.corp.nai.org\",\r\n    \"ScmPath\": \"/svn/projects/esp/tags\",\r\n    \"ScmTag\": \"Orbit_b123\",\r\n    \"ScmCommit\": \"2135\",\r\n    \"Credential\": \"jcollin1\",\r\n    \"ScmOrder\": \"2\"\r\n}",
			"folder": "69dfeab2-7caa-7ded-b11f-47fff1e39f20"
		},
		{
			"id": "8bb9431b-9506-ff89-83a5-deb184f3a369",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8082/v1/api/bom/BuildDependencyTable?BuildRecordId=1889",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"OrbitDependencies Returned\"] = responseBody.has(\"OrbitDependencies\");\ntests[\"EcmDependencies Returned\"] = responseBody.has(\"EcmDependencies\");\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492617130674,
			"name": "BuildDependencyTable",
			"description": "Purpose: This returns the JSON used to generate the build dependency table on the client.",
			"collectionId": "41c72afe-b130-17f2-b351-b521aeacb96f",
			"responses": [],
			"folder": "69dfeab2-7caa-7ded-b11f-47fff1e39f20"
		},
		{
			"id": "8ed5a9ba-b1b6-7175-8822-b1db8ec10d38",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8082/v1/api/bom/OrbitDependency",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Build Record ID exists\"] =! responseBody.has(\"A BOM record doesn't seem to exist\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492617174450,
			"name": "OrbitDependency",
			"description": "Purpose: This is used to add a record of an Orbit dependency, tied to a Build Record ID.\r\n\r\nReturns\r\n\r\n•\tHTTP 400 - if syntax error in JSON or JSON missing\r\n\r\n•\tHTTP 400 - if a BOM record doesn't exist for the Build Record Id passed\r\n\r\n•\tHTTP 400 - if the BOM is locked for the Build Record Id passed\r\n\r\n•\tHTTP 500 - if a server error occurs\r\n\r\n•\tHTTP 200 - if the record was added successfully\r\n",
			"collectionId": "41c72afe-b130-17f2-b351-b521aeacb96f",
			"responses": [],
			"rawModeData": "{\r\n\t\"BuildRecordID\": \"1889\",\r\n\t\"BomType\": \"Orbit\",\r\n    \"DependencyBuildRecordId\": \"2888\",\r\n    \"ScmOrder\": \"5\"\r\n}",
			"folder": "69dfeab2-7caa-7ded-b11f-47fff1e39f20"
		},
		{
			"id": "9af2c603-34a3-0105-9378-c350b78275e6",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8082/v1/api/bom/EcmMockMasterRecord",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Build Record ID exists\"] =! responseBody.has(\"A BOM record doesn't seem to exist\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492617182304,
			"name": "EcmMockMasterRecord",
			"description": "Purpose: This is used to add a reference to the ECM Master Record ID of the mocked record in ECM for this Orbit build. It updates the existing BOM with the given build record ID with this information.\r\n\r\nReturns\r\n\r\n•\tHTTP 400 - if syntax error in JSON or JSON missing\r\n\r\n•\tHTTP 400 - if a BOM record doesn't exist for the Build Record Id passed\r\n\r\n•\tHTTP 400 - if the BOM is locked for the Build Record Id passed\r\n\r\n•\tHTTP 500 - if a server error occurs\r\n\r\n•\tHTTP 200 - if the record was updated successfully\r\n",
			"collectionId": "41c72afe-b130-17f2-b351-b521aeacb96f",
			"responses": [],
			"rawModeData": "{\r\n\t\"BuildRecordID\": \"1\",\r\n\t\"EcmMockMasterRecordId\": \"353532\"\r\n}",
			"folder": "69dfeab2-7caa-7ded-b11f-47fff1e39f20"
		},
		{
			"id": "c6aae8de-3f73-7ae5-6edf-0f8bce956ba6",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8082/v1/api/bom/EcmDependency",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"BOM appears to be locked\"] =! responseBody.has(\"The BOM appears to be locked\");\n\ntests[\"Build Record ID exists\"] =! responseBody.has(\"A BOM record doesn't seem to exist\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492617151998,
			"name": "EcmDependency",
			"description": "Purpose: This is used to add a record of an ECM dependency, tied to a Build Record ID.\r\n\r\nReturns\r\n\r\n•\tHTTP 400 - if syntax error in JSON or JSON missing\r\n\r\n•\tHTTP 400 - if a BOM record doesn't exist for the Build Record Id passed\r\n\r\n•\tHTTP 400 - if the BOM is locked for the Build Record Id passed\r\n\r\n•\tHTTP 500 - if a server error occurs\r\n\r\n•\tHTTP 200 - if the record was added successfully\r\n\r\n",
			"collectionId": "41c72afe-b130-17f2-b351-b521aeacb96f",
			"responses": [],
			"rawModeData": "{\r\n\t\"BuildRecordID\": \"1\",\r\n\t\"BomType\": \"SCM\",\r\n    \"EcmMasterId\": \"97960050098\",\r\n    \"EcmProjectName\": \"MA\",\r\n    \"EcmBuildNumber\": \"123\",\r\n    \"EcmPackageNumber\": \"1\",\r\n    \"EcmVersion\": \"1.0.0\",\r\n    \"ScmOrder\": \"4\"\r\n}",
			"folder": "69dfeab2-7caa-7ded-b11f-47fff1e39f20"
		},
		{
			"id": "c7de04d9-d26e-51ea-e2af-2816b3b73fd5",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8082/v1/api/bom/LockBom?BuildRecordId=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Build Record ID exists\"] =! responseBody.has(\"A BOM record doesn't seem to exist\");\n\nif(tests[\"Build Record ID exists\"]){\ntests[\"BOM not already Locked\"] =! responseBody.has(\"already seems to be locked\");}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492617163984,
			"name": "LockBom",
			"description": "Purpose: This locks a BOM record from any further modifications, including adding of code exports and dependencies. There is no way to undo this via the API, although it can be manually reset via the database.\r\n\r\nReturns\r\n\r\n•\tHTTP 400 - if a BOM record doesn't exist for the Build Record Id passed\r\n\r\n•\tHTTP 400 - if the BOM is already locked\r\n\r\n•\tHTTP 500 - if a server error occurs\r\n\r\n•\tHTTP 200 - if the record was added successfully\r\n",
			"collectionId": "41c72afe-b130-17f2-b351-b521aeacb96f",
			"responses": [],
			"rawModeData": "",
			"folder": "69dfeab2-7caa-7ded-b11f-47fff1e39f20"
		},
		{
			"id": "d3f4af9c-f040-b202-b572-a558412f1edd",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8082/v1/api/bom/Bom",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"New BuildRecordId\"] =! responseBody.has(\"A BOM record already exists\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492617104144,
			"name": "Bom (POST)",
			"description": "Purpose: This function is used to add the initial details of a BOM record to the CMDB. It must be called to create that initial record before any other API calls are made.\r\n\r\nReturns\r\n\r\n•\tHTTP 400 - if syntax error in JSON or JSON missing\r\n\r\n•\tHTTP 400 - if BOM record already exists for the specified\r\nbuild record ID\r\n\r\n•\tHTTP 500 - if a server error occurs\r\n\r\n•\tHTTP 200 - if the record was added successfully\r\n\r\nNotes\r\n\r\n•\tThis can only be called once for any Build Record ID\r\n",
			"collectionId": "41c72afe-b130-17f2-b351-b521aeacb96f",
			"responses": [],
			"isFromCollection": true,
			"rawModeData": "{\r\n\t\"BuildRecordID\": \"1889\",\r\n\t\"BomType\": \"BuildSystem Environment\",\r\n\t\"BuildSystem\": \"Orbit\",\r\n\t\"BuildSystemVersion\": \"1.0.0\"\r\n}",
			"folder": "69dfeab2-7caa-7ded-b11f-47fff1e39f20"
		},
		{
			"id": "ddbf4038-e0b9-30ba-c89a-2a5fad28280a",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8082/v1/api/bom/Agent",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Build Record ID exists\"] =! responseBody.has(\"A BOM record doesn't seem to exist\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492617056508,
			"name": "Agent",
			"description": "Purpose: This is used to associate build agents with a BOM. It can be called multiple times.\r\n\r\nReturns\r\n\r\n•\tHTTP 400 - if syntax error in JSON or JSON missing\r\n\r\n•\tHTTP 400 - if BOM record can't be found for the given build record ID\r\n\r\n•\tHTTP 400 - if BOM record is locked\r\n\r\n•\tHTTP 500 - if a server error occurs\r\n\r\n•\tHTTP 200 - if the record was added successfully\r\n",
			"collectionId": "41c72afe-b130-17f2-b351-b521aeacb96f",
			"responses": [],
			"rawModeData": "{\r\n\t\"BuildRecordID\": \"2\",\r\n\t\"Agents\": [{\r\n\t\t\"Label\": \"ESP_Test_node_2\"\r\n\t}, {\r\n\t\t\"Label\": \"ESP_SmokeTest_2\"\r\n\t}]\r\n}",
			"folder": "69dfeab2-7caa-7ded-b11f-47fff1e39f20"
		},
		{
			"id": "e938cb42-8040-fe8a-06bd-40a0b34b35b9",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8082/v1/api/bom/BuildDependencyGraph?BuildRecordId=1889",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_schema =\n{\n\t\"type\" : \"object\",\n\t\"properties\" : {\n\t\t\"nodes\" : {\n\t\t\t\"type\" : \"array\",\n\t\t\t\"items\" : { \n\t\t\t\t\"type\" : \"object\",\n\t\t\t\t\"properties\" : {\n\t\t\t\t\t\"id\": { \"type\": \"integer\" },\n\t\t\t\t\t\"label\": { \"type\" : \"string\" },\n\t\t\t\t\t\"ProjectName\": { \"type\" : \"string\" },\n\t\t\t\t\t\"BuildRecordId\": { \"type\" : \"integer\" },\n\t\t\t\t\t\"BuildNumber\": { \"type\" : \"integer\" },\n\t\t\t\t\t\"PackageNumber\": { \"type\" : \"integer\" },\n\t\t\t\t\t\"Version\": { \"type\" : \"string\" },\n\t\t\t\t\t\"group\": { \"type\" : \"string\" },\n\t\t\t\t\t\"NodeTitle\": { \"type\" : \"string\" },\n\t\t\t\t\t\"BuildMilestone\": { \"type\" : \"string\" },\n\t\t\t\t\t\"link\": { \"type\" : \"string\" }\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\t\n\t\t\t\"items\" : {\n\t\t\t\t\"properties\" : {\n\t\t\t\t\"edges\": { \"type\": [\"array\",\"null\"] }\n\t\t\t\t\n\t}}}\n};\n    \nif( responseCode === 200 ){\ntests[\"Return schema valid\"] = tv4.validate(jsonData, test_schema);\nconsole.log(\"Validation errors: \", tv4.error);\n}\ntests[\"Is an istance of an object\"] =! responseBody.has(\"Object reference not set to an instance of an object\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492674908304,
			"name": "BuildDependencyGraph",
			"description": "Purpose: This returns the JSON used to generate the build dependency graph on the client.",
			"collectionId": "41c72afe-b130-17f2-b351-b521aeacb96f",
			"responses": [],
			"folder": "69dfeab2-7caa-7ded-b11f-47fff1e39f20"
		}
	]
}