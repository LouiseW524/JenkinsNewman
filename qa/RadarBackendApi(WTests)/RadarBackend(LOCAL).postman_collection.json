{
	"id": "a0567104-bf80-ad33-a487-6ca5609d93df",
	"name": "RadarBackend(LOCAL)",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"name": "RadarBackend(local)",
			"description": "",
			"order": [
				"53d63835-e649-558b-1e54-4ffa73b6a1b1",
				"6d63fccd-5276-5919-aeed-8f35fe4c1c81",
				"ed6c28c5-4dc1-c18e-f7de-d2cb5178a08e",
				"2ac6b3a2-8791-5451-5e8f-629f7e849a20",
				"bea5a80e-57dc-787a-3414-09c2009dc5a0",
				"8959b6a3-7d9f-5564-61a8-aa95075db8e1",
				"6eb63eea-be2b-383a-86c0-09ba718a3b47",
				"a037c3a5-68d4-c4dc-8571-6eed4248b428",
				"592a2522-3070-76fe-bc40-d8479f19bdc1",
				"e209d8e5-675c-d893-826a-6fc7546842e3",
				"bac339b7-1e9a-f64f-feb0-2ec19f022d51",
				"5e5d3342-c944-776f-562b-2dee033d07d4",
				"eb07f05d-3d8a-4ed1-5600-f31c02bd2fae",
				"70243bb3-7fb0-89d0-7d04-ed91f26b0cab",
				"58440df8-2c7e-d4d3-0f1a-be92d0725c90",
				"144061b9-d5c2-63bf-7d3d-bcec37ad4c01",
				"ed5cd7fa-7a7c-ebbe-6da9-aaa52e5432eb",
				"99c067a8-bc14-2989-1112-3816aaee04a0",
				"3a265e96-562d-6544-af3b-4d1f4bfc2d46",
				"56c3f9a1-c1c3-e05c-7511-745443ca1437",
				"e65ae8a1-0d83-b9d1-b989-6d313bd7bafd",
				"c470c6a3-46ef-0fd0-ae2a-5de2e2e7df83",
				"8728297a-6fab-85b2-e294-65909777c636"
			],
			"owner": "1802157",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df"
		}
	],
	"timestamp": 1492590509843,
	"owner": "1802157",
	"public": false,
	"requests": [
		{
			"id": "144061b9-d5c2-63bf-7d3d-bcec37ad4c01",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/Test/TestRecord",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Valid test platform\"] =! responseBody.has(\"Invalid test platform value passed\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492526512402,
			"name": "TestRecord",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{\r\n\t\"BuildRecordID\": \"3\",\r\n\t\"TestType\": \"BVT\",\r\n     \"Platform\": \"Linux\",\r\n     \"Architecture\": \"x86\",\r\n\t\"URL\": \"http://your.test.rig/results/build/100/bvt\",\r\n\t\"Suites\": [\r\n\t\t{\r\n\t\t\t\"TestSuiteName\": \"GTI\",\r\n\t\t\t\"TotalNumberOfTests\": \"100\"\r\n\t\t}, \r\n        {\r\n\t\t\t\"TestSuiteName\": \"Logger\",\r\n\t\t\t\"TotalNumberOfTests\": \"14\"\r\n\t\t}\r\n\t]\r\n}\r\n"
		},
		{
			"id": "2ac6b3a2-8791-5451-5e8f-629f7e849a20",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/verdir/VerDirResults",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nif(responseBody.length > 2){\nvar jsonData = JSON.parse(responseBody);\ntest_schema = {\n          \"items\":{\n                    \"properties\": {         \n                    \"Error\": { \"type\": \"string\"}\n                    }\n        }   \n    };\n\ntests[\"Valid BuildRecordId sent\"] = !(tv4.validate(jsonData, test_schema));\nconsole.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492513694581,
			"name": "VerDirResults",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"isFromCollection": true,
			"collectionRequestId": "9e2c5727-5f54-5c21-9795-cb7a8458cf4c",
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{ \r\n  \"BuildRecordID\": \"18\",\r\n  \"BuildNumber\": \"100\",\r\n  \"FilesAnalyzed\": \"156\",\r\n  \"FailureCount\": \"5\",\r\n  \"Status\": \"Fail\",\r\n  \"FailureList\": [\r\n    {\"file\":\"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\x64\\\\EmBlEventViewStr.dll\",\r\n    \"errors\": [ \"Signature checks excluded  (disabled by command line switch)\", \"File contains   unrecognised debug information type 13\" ]},\r\n    {\"file\":\"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\Win32\\\\EmBlEventViewStr.dll\",\r\n    \"errors\": [ \"Signature checks excluded  (disabled by command line switch)\", \"File contains unrecognised debug information type 13\" ]},\r\n    {\"file\":\"BUILD\\\\ESP\\\\PackagingEspSetup\\\\vcredist\\\\vc_redist2015.x86.exe\",\r\n    \"errors\": [ \"Company Name doesn't contain McAfee,  Intel Corporation, or Intel Security\", \"Signature checks excluded  (disabled by command line switch)\" ]},\r\n{\"file\":\"BUILD\\\\ESP\\\\BusinessObjects\\\\MaPkgSupplier\\\\SamplePkg\\\\build\\\\zip.exe\",\r\n    \"errors\": [ \"No version information\", \"ASLR compatibility flag isn't turned on\", \"DEP compatibility flag isn't turned on\" ]},\r\n    {\"file\":\"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\Win32\\\\BLSvcHost.exe\",\r\n    \"errors\": [ \"No version information\" ]}\r\n    ]\r\n}\r\n"
		},
		{
			"id": "3a265e96-562d-6544-af3b-4d1f4bfc2d46",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/Test/TestResults?BuildRecordId=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody); \ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response body has content\"] = (responseBody.length > 2);\n\ntest_schema = {\n  \n        \"items\":{\n                  \n                    \"properties\": {         \n                    \"TestRecordId\": { \"type\": \"integer\"},\n                    \"BuildRecordID\": { \"type\": \"integer\"},\n                    \"TestType\": { \"type\": \"string\" },\n    \t\t        \"URL\": { \"type\": \"string\" },\n    \t\t        \"Platform\": { \"type\": \"string\"},\n                    \"Architecture\": { \"type\": \"string\"},\n    \t\t        \"Result\": { \"type\": \"string\" },\n    \t\t        \"TestSuites\": { \"type\": [\"array\",\"null\"] }\n                }\n            }   \n        };\ntests[\"Valid response schema\"] = tv4.validate(jsonData, test_schema);\nif(tv4.validate(jsonData, test_schema)){\n    \n    var listLength  = jsonData.length;\n   \n        for( var i = 0 ; i < listLength; i ++)  {\n        \n            tests[\"Valid Data in response array element\" + i] = tv4.validate(jsonData[i], test_schema );\n        }\n\n}\n\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492506932712,
			"name": "TestResults",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653"
		},
		{
			"id": "53d63835-e649-558b-1e54-4ffa73b6a1b1",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/build/BuildRecord",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Unique Build Number\"] =! responseBody.has(\"A record already seems to exist \");\n\ntests[\"Build Record Returned\"] = responseBody.has(\"BuildRecordID\")\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492589845714,
			"name": "BuildRecord",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{ \r\n  \"Solution\": \"Dynamic Endpoint\",\r\n  \"SolutionVersion\": \"1.0.0\",\r\n  \"Product\": \"ESP\",\r\n  \"ProductVersion\": \"11.0\",\r\n  \"Component\": \"ESP_UX\",\r\n  \"ComponentVersion\": \"11.0\",\r\n  \"BuildNumber\": \"112\",\r\n  \"BuildMilestone\": \"Queued\",\r\n  \"Branch\": \"trunk\",\r\n  \"URL\": \"http://build.orbit.intel.com/job/ESP/job/ESP_CHAIN/job/ESP_UX/101\"\r\n}\r\n"
		},
		{
			"id": "56c3f9a1-c1c3-e05c-7511-745443ca1437",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/Quality/QualityGate",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Valid Quality Gate Name\"] = !responseBody.has(\"An active Quality Gate with this name already exists\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492508800455,
			"name": "QualityGate(Post)",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"isFromCollection": true,
			"collectionRequestId": "a930ff58-5705-8a44-5cd5-f8476807dd6b",
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{ \r\n  \"Name\": \"Jimmy1223\",\r\n  \"Description\": \"# of defects found\",\r\n  \"Type\": \"count\",\r\n  \"Pass\": \"0\",\r\n  \"Fail\": \"15\",\r\n  \"Min\": \"0\",\r\n  \"Max\": \"100\",\r\n  \"Active\": \"1\"\r\n}"
		},
		{
			"id": "58440df8-2c7e-d4d3-0f1a-be92d0725c90",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/build/BuildSearch?solutionName=Dynamic%20Endpoint&solutionVersion=1.0.0&productName=ESP&productVersion=11.0&componentName=ESP_UX&componentVersion=11.0&milestone=Released%20to%20QA&useExactMilestone=false",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Valid build Information\"] =! responseBody.has(\"Could not find build\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntest_str = { \"items\":{\"type\" : \"string\"} };\ntest_int = { \"items\":{\"type\" : \"integer\"}};\nvar strings = [jsonData.ArtifactoryUrl];\nvar integers = [jsonData.BuildRecordId, jsonData.BuildNumber];\n\ntests[\"Valid Response schema \"] = (tv4.validate(strings, test_str) && tv4.validate(integers, test_int)); \n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492507276290,
			"name": "BuildSearch",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653"
		},
		{
			"id": "592a2522-3070-76fe-bc40-d8479f19bdc1",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/build/BuildMilestone",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Correct progressions between milestones\"] =! responseBody.has(\"You cannot progress\");\n\ntests[\"Correct build Record ID\"] =! responseBody.has(\"Could not get the build milestone ID\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492163316674,
			"name": "BuildMilestone",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{\r\n  \"BuildRecordID\": \"1\",\r\n  \"BuildMilestone\": \"Automated BVT - In Progress\",\r\n  \"Username\": \"jcollin1\",\r\n  \"Comment\": \"Test comment\"\r\n}"
		},
		{
			"id": "5e5d3342-c944-776f-562b-2dee033d07d4",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/build/BuildResult",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Valid build Record ID\"] =! responseBody.has(\"Can't find a build record\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492503371158,
			"name": "BuildResult",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{ \r\n  \"BuildRecordID\": \"1\",\r\n  \"BuildResult\": \"Passed\",\r\n  \"BuildComment\": \"No Quality Gate Violations.\"\r\n}"
		},
		{
			"id": "6d63fccd-5276-5919-aeed-8f35fe4c1c81",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/build/BuildRecord?buildRecordId=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody); \ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar listLength  = jsonData.length;\ntests[\"Response body has content\"] = (responseBody.length > 2);\ntest_schema = {\n  \n        \"items\":{\n                  \n                    \"properties\": {         \n                    \"BuildRecordID\": { \"type\": \"integer\"},\n                    \"SolutionID\": { \"type\": \"integer\"},\n    \t\t        \"ProductID\": { \"type\": \"integer\" },\n    \t\t        \"ComponentID\": { \"type\": \"integer\" },\n                    \"BuildNumber\": { \"type\": \"integer\" },\n    \t\t        \"BuildMilestone\": { \"type\": \"string\" },\n    \t\t        \"Branch\": { \"type\": \"string\" },\n    \t\t        \"Timestamp\": { \"type\": \"string\"},\n                    \"BuildURL\": { \"type\": \"string\"},\n    \t\t        \"ArtifactoryURL\": { \"type\": \"string\" },\n    \t\t        \"BuildResult\": { \"type\": \"string\" },\n                    \"BuildComment\": { \"type\": \"string\" },\n    \t\t        \"CodeCoverage\": { \"type\": [\"integer\", \"null\"] },\n    \t\t        \"OpenBugzillaDefects\": { \"type\": \"integer\"},\n    \t\t        \"BuildSteps\": { \"type\": [\"array\",\"null\"] }\n                    }\n        }   \n    };\n    \n\ntests[\"Return schema valid\"] = tv4.validate(jsonData, test_schema);\nconsole.log(\"Validation errors: \", tv4.error);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492589888092,
			"name": "BuildRecord(GET)",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"isFromCollection": true,
			"collectionRequestId": "ae15c1c6-7e3c-1805-8d83-8a0f0f841075",
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653"
		},
		{
			"id": "6eb63eea-be2b-383a-86c0-09ba718a3b47",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/coverity/CoverityResults?BuildRecordId=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \ntests[\"Response body has content\"] = (responseBody.length > 2);\n\ntest_schema = {\n  \n        \"items\":{\n                  \n                    \"properties\": {         \n                    \"CoverityResultId\": { \"type\": \"integer\"},\n                    \"BuildRecordId\": { \"type\": \"integer\"},\n    \t\t        \"FilesAnalyzed\": { \"type\": \"integer\" },\n    \t\t        \"TotalLOCAnalyzed\": { \"type\": \"integer\" },\n                    \"FunctionsAnalyzed\": { \"type\": \"integer\" },\n    \t\t        \"PathsAnalyzed\": { \"type\": \"integer\" },\n    \t\t        \"Duration\": { \"type\": \"string\" },\n    \t\t        \"URL\": { \"type\": \"string\" },\n    \t\t        \"NewDefectsFound\": { \"type\": \"integer\"},\n                    \"OutstandingDefectsFound\": {\"type\": \"integer\"},\n    \t\t        \"DefectsList\": { \"type\": [\"array\",\"null\"] }\n                    }\n        }   \n    };\n\ntests[\"Return schema valid\"] = tv4.validate(jsonData, test_schema);\nconsole.log(\"Validation errors: \", tv4.error);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492506476715,
			"name": "CoverityResults(GET)",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653"
		},
		{
			"id": "70243bb3-7fb0-89d0-7d04-ed91f26b0cab",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/build/HighLevelBuildReport?solutionName=Dynamic%Endpoint&solutionVersion=1.0.0&productName=ESP&productVersion=11.0&componentName=ESP_UX&componentVersion=11.0&buildNumber=100&branch=trunk",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Specified parameters correct\"] =! responseBody.has(\"Could not find a record of a build\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar jsonData = JSON.parse(responseBody); \n\ntests[\"Response body has content\"] = (responseBody.length > 2);\ntest_schema = {\n  \n        \"items\":{\n                  \n                    \"properties\": {         \n                    \"BuildRecordID\": { \"type\": \"integer\"},\n                    \"BuildNumber\": { \"type\": \"integer\" },\n    \t\t        \"Branch\": { \"type\": \"string\" },\n    \t\t        \"MileStone\": {\"type\": \"string\"},\n    \t\t        \"BuildResult\": { \"type\": \"string\" },\n    \t\t        \"BuildStartTime\": { \"type\": \"string\"},\n                    \"OpenBugzillaDefects\": { \"type\": \"integer\"},\n    \t\t        \"CoverityOutstandingDefects\": { \"type\": [\"integer\", \"null\"] },\n    \t\t        \"VerDirFailures\": { \"type\": \"integer\" },\n    \t\t        \"TestingResult\": { \"type\": \"string\" }\n                    }\n        }   \n    };\nif(responseCode.code === 200){\n    tests[\"Valid response schema\"] = tv4.validate(jsonData, test_schema);\n}\nconsole.log(\"Validation errors: \", tv4.error);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492506647918,
			"name": "HighLevelBuildReport",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653"
		},
		{
			"id": "8728297a-6fab-85b2-e294-65909777c636",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/globalyzer/GlobalyzerResults",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"data": [],
			"dataMode": "raw",
			"name": "GlobalyzerResults",
			"description": "GLobalyzer Results",
			"descriptionFormat": "html",
			"time": 1490710777560,
			"version": 2,
			"responses": [],
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"isFromCollection": true,
			"rawModeData": "{\r\n    \"Project\":\"Project 1\",\r\n    \"Language\":\"English\",\r\n    \"Version\":\"10.0.0\",\r\n    \"ConfigurationType\":\"Release\",\r\n    \"ReleaseNumber\":\"123\",\r\n    \"ReleaseType\":\"Main\",\r\n    \"SVNBranch\":\"/trunk/main\",\r\n    \"BuildNumber\":\"354\",\r\n    \"Date\":\"12/07/16 12:0:0\",\r\n    \"GlobalyzerProjectName\":\"Test Proj 1\",\r\n    \"GlobalyzerBasePath\":\"C:/Projects/L10N/Test/Globalyzer/Results\",\r\n    \"Scans\":[\r\n        {\r\n            \"Name\":\"JavaScript\",\r\n            \"RuleSetName\":\"Test projects JavaScript rules\",\r\n            \"Language\":\"JavaScript\",\r\n            \"LastScanDate\":\"12/06/16\",\r\n            \"FileCount\":963,\r\n            \"LineCount\":27362,\r\n            \"Results\":[\r\n                {\r\n                    \"Type\":\"Embedded Strings\",\r\n                    \"Active\":1973,\r\n                    \"Ignore\":200,\r\n                    \"Invalid\":195,\r\n                    \"StickyIgnore\":0,\r\n                    \"Resolved\":0,\r\n                    \"Todo\":0,\r\n                    \"Filtered\":1290\r\n                },\r\n                {\r\n                    \"Type\":\"Locale sensitive methods\",\r\n                    \"Active\":50,\r\n                    \"Ignore\":20,\r\n                    \"Invalid\":10,\r\n                    \"StickyIgnore\":10,\r\n                    \"Resolved\":50,\r\n                    \"Todo\":0,\r\n                    \"Filtered\":122\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"Name\":\"CPlusPlus\",\r\n            \"RuleSetName\":\"Test projects C++ rules\",\r\n            \"Language\":\"C++\",\r\n            \"LastScanDate\":\"12/7/16\",\r\n            \"FileCount\":1000,\r\n            \"LineCount\":100000,\r\n            \"Results\":[\r\n                {\r\n                    \"Type\":\"Embedded Strings\",\r\n                    \"Active\":500,\r\n                    \"Ignore\":2,\r\n                    \"Invalid\":0,\r\n                    \"StickyIgnore\":0,\r\n                    \"Resolved\":600,\r\n                    \"Todo\":0,\r\n                    \"Filtered\":12\r\n                },\r\n                {\r\n                    \"Type\":\"Locale sensitive methods\",\r\n                    \"Active\":1234,\r\n                    \"Ignore\":20,\r\n                    \"Invalid\":10,\r\n                    \"StickyIgnore\":10,\r\n                    \"Resolved\":50,\r\n                    \"Todo\":0,\r\n                    \"Filtered\":122\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
			"collectionRequestId": "fafdd333-c0f2-e163-c3fd-4f13ca940ce4"
		},
		{
			"id": "8959b6a3-7d9f-5564-61a8-aa95075db8e1",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/coverity/CoverityResults",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Valid Build Record ID {exists in DB}\"] = responseBody.has(\"Expected\");\n\nif(!responseBody.has(\"Expected\")){\ntests[\"Valid Unused Build Record ID\"] = !responseBody.has(\"Coverity results already exist\");\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492508476745,
			"name": "CoverityResults",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{ \r\n  \"BuildRecordID\": \"17\",\r\n  \"FilesAnalyzed\": \"3\",\r\n  \"TotalLOCAnalyzed\": \"3143\",\r\n  \"FunctionsAnalyzed\": \"211\",\r\n  \"PathsAnalyzed\": \"23\",\r\n  \"Duration\": \"00:00:12\",\r\n  \"URL\": \"http://beaappcov1.corp.nai.org\",\r\n  \"NewDefectsFound\": \"3\",\r\n  \"OutstandingDefects\": \"9\",\r\n\r\n  \"DefectsList\": [\r\n    \r\n    {\r\n      \"Cid\": \"120435\",\r\n      \"Severity\": \"unspecified\",\r\n      \"Classification\": \"unclassified\",\r\n      \"Impact\": \"undecided\",\r\n      \"File\": \"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\x64\\\\EmBlEventViewStr.cpp\",\r\n      \"Category\": \"BUFFER_OVERFLOW\",\r\n      \"Type\": \"Buffer overflow\"\r\n    },\r\n     \r\n    {\r\n      \"Cid\": \"120436\",\r\n      \"Severity\": \"unspecified\",\r\n      \"Classification\": \"unclassified\",\r\n      \"Impact\": \"undecided\",\r\n      \"File\": \"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\x64\\\\EmBlEventViewStr.cpp\",\r\n      \"Category\": \"FORWARD_NULL\",\r\n      \"Type\": \"Deferencing Null Pointer pi\"\r\n    },\r\n    \r\n    {\r\n      \"Cid\": \"120437\",\r\n      \"Severity\": \"unspecified\",\r\n      \"Classification\": \"unclassified\",\r\n      \"Impact\": \"undecided\",\r\n      \"File\": \"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\x64\\\\foo.cpp\",\r\n      \"Category\": \"FORWARD_NULL\",\r\n      \"Type\": \"Deferencing Null Pointer pi\"\r\n    }\r\n    ]\r\n}\r\n"
		},
		{
			"id": "99c067a8-bc14-2989-1112-3816aaee04a0",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/test/TestRecordResult",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"TestRecordId valid\"] = !responseBody.has(\"Can't find a test record for the test record ID\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492507462853,
			"name": "TestRecordResult",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{\r\n  \"TestRecordID\": \"15\",\r\n  \"TestResult\": \"Failed\"\r\n}"
		},
		{
			"id": "a037c3a5-68d4-c4dc-8571-6eed4248b428",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/build/ArtifactoryUrl",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Valid Build Record\"] =! responseBody.has(\"Can't find a build record \");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1491918875708,
			"name": "ArtifactoryUrl",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{\r\n  \"BuildRecordID\": \"1\",\r\n  \"ArtifactoryUrl\": \"http://artifactoryurl/build43\"\r\n}"
		},
		{
			"id": "bac339b7-1e9a-f64f-feb0-2ec19f022d51",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/build/BuildMilestoneProgressions?BuildRecordId=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody); \nvar listLength  = jsonData.length;\n\ntest_str = { \"items\":{\"type\" : \"string\"} };\ntest_int = { \"items\":{\"type\" : \"integer\"}};\n   \nfor( var i = 0 ; i < listLength; i ++)  {\n \n    var strings = [jsonData[i].BuildMilestoneName];\n    var integers = [jsonData[i].BuildMileStoneId, jsonData[i].BuildMileStoneLevel];\n    tests[\"Valid Schema Milestone \" + i + \" Pass\" ] = (tv4.validate(integers, test_int) && tv4.validate(strings, test_str));\n\n}\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response body has content\"] = (responseBody.length > 2);\ntests[\"Valid Build RecordId\"] =! responseBody.has(\"Object reference not set\");\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492506534156,
			"name": "BuildMilestoneProgressions",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653"
		},
		{
			"id": "bea5a80e-57dc-787a-3414-09c2009dc5a0",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/verdir/VerDirResults?BuildRecordId=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody); \ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response body has content\"] = (responseBody.length > 2);\ntest_schema = {\n  \n        \"items\":{\n                    \"properties\": {         \n                    \"BuildRecordId\": { \"type\": \"integer\"},\n                    \"FilesAnalyzed\": { \"type\": \"integer\"},\n    \t\t        \"FailureCount\": { \"type\": \"integer\" },\n    \t\t        \"Status\": { \"type\": \"string\" },\n                    \"FailureList\": { \"type\": [\"array\",\"null\"] }\n                    }\n        }   \n    };\n\ntests[\"Return schema valid\"] = tv4.validate(jsonData, test_schema);\nconsole.log(\"Validation errors: \", tv4.error);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492589914876,
			"name": "VerDirResults(GET)",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653"
		},
		{
			"id": "c470c6a3-46ef-0fd0-ae2a-5de2e2e7df83",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/Quality/QualityGates",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody); \ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response body has content\"] = (responseBody.length > 2);\ntest_schema ={\n  \n        \"items\":{\n                  \n                    \"properties\": {         \n                    \"QualityGateId\": { \"type\": \"integer\"},\n                    \"Name\": { \"type\": \"string\"},\n    \t\t        \"Description\": { \"type\": \"string\" },\n    \t\t        \"Type\": { \"type\": \"string\" },\n                    \"Pass\": { \"type\": \"integer\" },\n    \t\t        \"Fail\": { \"type\": \"integer\" },\n    \t\t        \"Min\": { \"type\": \"integer\" },\n    \t\t        \"Max\": { \"type\": \"integer\"},\n                    \"Active\": { \"type\": \"integer\"}\n                    }\n        }   \n    };\n\ntests[\"Valid response schema\"] = tv4.validate(jsonData[0], test_schema);\n\nfor (var i =0; i < jsonData.length ; i ++){\n    tests[\"correct list item \" + i] =  tv4.validate(jsonData[i], test_schema);\n}\nconsole.log(\"Validation errors: \", tv4.error);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492507075160,
			"name": "QualityGates",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"isFromCollection": true,
			"collectionRequestId": "73a8f5fa-481f-1356-ed0a-2b7831ac3f3d",
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653"
		},
		{
			"id": "e209d8e5-675c-d893-826a-6fc7546842e3",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/build/BuildMilestoneHistory?BuildRecordId=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody); \ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response body has content\"] = (responseBody.length > 2);\ntest_schema = {\n  \n        \"items\":{\n                  \n                    \"properties\": {         \n                    \"BuildMilestonesRecordId\": { \"type\": \"integer\"},    \n                    \"BuildRecordId\": { \"type\": \"integer\"},\n                    \"PreviousBuildMilestone\": { \"type\": \"string\" },\n    \t\t        \"NewBuildMilestone\": { \"type\": \"string\" },\n    \t\t        \"Username\": { \"type\": \"string\"},\n                    \"Comment\": { \"type\": \"string\"},\n    \t\t        \"Timestamp\": { \"type\": \"string\" }}\n        }   \n    };\n\ntests[\"Response sche,a valid\"] = tv4.validate(jsonData, test_schema);\nconsole.log(\"Validation errors: \", tv4.error);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492506504755,
			"name": "BuildMilestoneHistory",
			"description": "Build milestone history ",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653"
		},
		{
			"id": "e65ae8a1-0d83-b9d1-b989-6d313bd7bafd",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/Quality/QualityGateUpdate",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Quality gate specified exists\"] = !responseBody.has(\"The Quality Gate specified to update doesn't seem to exist \");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1491916174114,
			"name": "QualityGateUpdate",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"isFromCollection": true,
			"collectionRequestId": "cc2290b8-377a-0d6f-750d-fed6a686e886",
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{ \r\n  \"Name\": \"Jimmy123\",\r\n  \"Description\": \"# of defects found\",\r\n  \"Type\": \"count\",\r\n  \"Pass\": \"0\",\r\n  \"Fail\": \"10\",\r\n  \"Min\": \"0\",\r\n  \"Max\": \"100\",\r\n  \"Active\": \"1\"\r\n}"
		},
		{
			"id": "eb07f05d-3d8a-4ed1-5600-f31c02bd2fae",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/build/HighLevelBuildReport?BuildRecordId=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody); \ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response body has content\"] = (responseBody.length > 2);\ntest_schema = {\n  \n        \"items\":{\n                  \n                    \"properties\": {         \n                    \"BuildRecordID\": { \"type\": \"integer\"},\n                    \"BuildNumber\": { \"type\": \"integer\" },\n    \t\t        \"Branch\": { \"type\": \"string\" },\n    \t\t        \"MileStone\": {\"type\": \"string\"},\n    \t\t        \"BuildResult\": { \"type\": \"string\" },\n    \t\t        \"BuildStartTime\": { \"type\": \"string\"},\n                    \"OpenBugzillaDefects\": { \"type\": \"integer\"},\n    \t\t        \"CoverityOutstandingDefects\": { \"type\": [\"integer\", \"null\"] },\n    \t\t        \"VerDirFailures\": { \"type\": \"integer\" },\n    \t\t        \"TestingResult\": { \"type\": \"string\" }\n                    }\n        }   \n    };\n\ntests[\"Valid response schema\"] = tv4.validate(jsonData, test_schema);\nconsole.log(\"Validation errors: \", tv4.error);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492506615865,
			"name": "HighLevelBuildReport(BuildRecordID)",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653"
		},
		{
			"id": "ed5cd7fa-7a7c-ebbe-6da9-aaa52e5432eb",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/Test/TestCaseResult",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\ntests[\"Test Record ID Valid\"] =! responseBody.has(\"Test Suite specified was not found\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1491915433567,
			"name": "TestCaseResult",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{\r\n\t\"TestRecordID\": \"2\",\r\n\t\"TestSuiteName\": \"GTI\",\r\n\t\"TestCaseName\": \"Test good file\",\r\n    \"TestCaseResult\": \"Pass\"\r\n}"
		},
		{
			"id": "ed6c28c5-4dc1-c18e-f7de-d2cb5178a08e",
			"headers": "Content-Type: application/json\n",
			"url": "http://localhost:2345/api/Build/BuildStep",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Valid BuildRecord Id added\"] =! responseBody.has(\"Expected a non-null integer for property: 'BuildRecordID'\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1492174812390,
			"name": "BuildStep",
			"description": "",
			"collectionId": "a0567104-bf80-ad33-a487-6ca5609d93df",
			"responses": [],
			"isFromCollection": true,
			"collectionRequestId": "47904e9e-2fb5-8a20-a5af-5b980c804693",
			"folder": "5aeeb9e2-6be1-e3d9-69dc-c9f7f5480653",
			"rawModeData": "{\r\n  \"BuildRecordID\": \"2\",\r\n  \"StepName\": \"Checkout Source\",\r\n  \"StepResult\": \"Pass\"\r\n}\r\n"
		}
	]
}