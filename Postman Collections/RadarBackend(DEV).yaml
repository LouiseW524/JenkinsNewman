swagger: 2.0
info:
  version: 1.0
  title: RadarBackend(DEV)
  description: Contains all the Radar Backend APIs to run on DevRadar
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: devradar.orbit.intel.com:8080
basePath: /v1/api
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /build/BuildRecord:
    get:
      description: 'TODO: Add Description'
      summary: BuildRecord(GET)
      tags:
      - RadarBackend(DevRadar)
      operationId: BuildRecord(GET)
      produces:
      - application/json
      parameters:
      - name: buildRecordId
        in: query
        required: true
        type: integer
        format: int32
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /build/BuildRecord?buildRecordId=46
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: BuildRecord(GET)
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: 'TODO: Add Description'
      summary: BuildRecord
      tags:
      - RadarBackend(DevRadar)
      operationId: BuildRecord
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/BuildRecordRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /build/BuildRecord
          headers:
            Content-Type: application/json
          body: "{ \r\n  \"Solution\": \"Dynamic Endpoint\",\r\n  \"SolutionVersion\": \"1.0.0\",\r\n  \"Product\": \"ESP\",\r\n  \"ProductVersion\": \"11.0\",\r\n  \"Component\": \"ESP_UX\",\r\n  \"ComponentVersion\": \"11.0\",\r\n  \"BuildNumber\": \"102\",\r\n  \"BuildMilestone\": \"Queued\",\r\n  \"Branch\": \"trunk\",\r\n  \"URL\": \"http://build.orbit.intel.com/job/ESP/job/ESP_CHAIN/job/ESP_UX/100\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: BuildRecord
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /build/BuildStep:
    post:
      description: 'TODO: Add Description'
      summary: BuildStep
      tags:
      - RadarBackend(DevRadar)
      operationId: BuildStep
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/BuildStepRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /build/BuildStep
          headers:
            Content-Type: application/json
          body: >-
            {

              "BuildRecordId": "10",

              "StepName": "Compilation",

              "StepResult": "Pass"

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: BuildStep
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /verdir/VerDirResults:
    get:
      description: 'TODO: Add Description'
      summary: VerDirResults(GET)
      tags:
      - RadarBackend(DevRadar)
      operationId: VerDirResults(GET)
      produces:
      - application/json
      parameters:
      - name: BuildRecordId
        in: query
        required: true
        type: integer
        format: int32
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /verdir/VerDirResults?BuildRecordId=43
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: VerDirResults(GET)
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: 'TODO: Add Description'
      summary: VerDirResults
      tags:
      - RadarBackend(DevRadar)
      operationId: VerDirResults
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/VerDirResultsRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /verdir/VerDirResults
          headers:
            Content-Type: application/json
          body: "{ \r\n  \"BuildRecordID\": \"43\",\r\n  \"BuildNumber\": \"101\",\r\n  \"FilesAnalyzed\": \"10\",\r\n  \"FailureCount\": \"5\",\r\n  \"Status\": \"Fail\",\r\n  \r\n  \"FailureList\": [\r\n    \r\n    {\"file\":\"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\x64\\\\EmBlEventViewStr.dll\",\r\n    \"errors\": [ \"Signature checks excluded  (disabled by command line switch)\", \"File contains   unrecognised debug information type 13\" ]},\r\n    {\"file\":\"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\Win32\\\\EmBlEventViewStr.dll\",\r\n    \"errors\": [ \"Signature checks excluded  (disabled by command line switch)\", \"File contains unrecognised debug information type 13\" ]},\r\n    {\"file\":\"BUILD\\\\ESP\\\\PackagingEspSetup\\\\vcredist\\\\vc_redist2015.x86.exe\",\r\n    \"errors\": [ \"Company Name doesn't contain McAfee,  Intel Corporation, or Intel Security\", \"Signature checks excluded  (disabled by command line switch)\" ]},\r\n{\"file\":\"BUILD\\\\ESP\\\\BusinessObjects\\\\MaPkgSupplier\\\\SamplePkg\\\\build\\\\zip.exe\",\r\n    \"errors\": [ \"No version information\", \"ASLR compatibility flag isn't turned on\", \"DEP compatibility flag isn't turned on\" ]},\r\n    {\"file\":\"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\Win32\\\\BLSvcHost.exe\",\r\n    \"errors\": [ \"No version information\" ]}\r\n    ]\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: VerDirResults
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /coverity/CoverityResults:
    get:
      description: 'TODO: Add Description'
      summary: CoverityResults(GET)
      tags:
      - RadarBackend(DevRadar)
      operationId: CoverityResults(GET)
      produces:
      - application/json
      parameters:
      - name: BuildRecordId
        in: query
        required: true
        type: integer
        format: int32
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /coverity/CoverityResults?BuildRecordId=43
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: CoverityResults(GET)
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: 'TODO: Add Description'
      summary: CoverityResults
      tags:
      - RadarBackend(DevRadar)
      operationId: CoverityResults
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CoverityResultsRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /coverity/CoverityResults
          headers:
            Content-Type: application/json
          body: "{ \r\n  \"BuildRecordID\": \"43\",\r\n  \"FilesAnalyzed\": \"3\",\r\n  \"TotalLOCAnalyzed\": \"3143\",\r\n  \"FunctionsAnalyzed\": \"211\",\r\n  \"PathsAnalyzed\": \"23\",\r\n  \"Duration\": \"00:00:12\",\r\n  \"URL\": \"http://beaappcov1.corp.nai.org\",\r\n  \"NewDefectsFound\": \"3\",\r\n  \"OutstandingDefects\": \"9\",\r\n  \r\n  \"DefectsList\": [\r\n    \r\n    {\r\n      \"Cid\": \"120435\",\r\n      \"Severity\": \"unspecified\",\r\n      \"Classification\": \"unclassified\",\r\n      \"Impact\": \"undecided\",\r\n      \"File\": \"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\x64\\\\EmBlEventViewStr.cpp\",\r\n      \"Category\": \"BUFFER_OVERFLOW\",\r\n      \"Type\": \"Buffer overflow\"\r\n    },\r\n     \r\n    {\r\n      \"Cid\": \"120436\",\r\n      \"Severity\": \"unspecified\",\r\n      \"Classification\": \"unclassified\",\r\n      \"Impact\": \"undecided\",\r\n      \"File\": \"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\x64\\\\EmBlEventViewStr.cpp\",\r\n      \"Category\": \"FORWARD_NULL\",\r\n      \"Type\": \"Deferencing Null Pointer pi\"\r\n    },\r\n    \r\n    {\r\n      \"Cid\": \"120437\",\r\n      \"Severity\": \"unspecified\",\r\n      \"Classification\": \"unclassified\",\r\n      \"Impact\": \"undecided\",\r\n      \"File\": \"BUILD\\\\ESP\\\\BuildResults\\\\Release\\\\x64\\\\foo.cpp\",\r\n      \"Category\": \"FORWARD_NULL\",\r\n      \"Type\": \"Deferencing Null Pointer pi\"\r\n    }\r\n\r\n    ]\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: CoverityResults
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /build/ArtifactoryUrl:
    post:
      description: 'TODO: Add Description'
      summary: ArtifactoryUrl
      tags:
      - RadarBackend(DevRadar)
      operationId: ArtifactoryUrl
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ArtifactoryUrlRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /build/ArtifactoryUrl
          headers:
            Content-Type: application/json
          body: >-
            {

              "BuildRecordID": "43",

              "ArtifactoryUrl": "http://artifactoryurl/build43"

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: ArtifactoryUrl
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /build/BuildMilestone:
    get:
      description: 'TODO: Add Description'
      summary: BuildMilestone(GET)
      tags:
      - RadarBackend(DevRadar)
      operationId: BuildMilestone(GET)
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /build/BuildMilestone
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: BuildMilestone(GET)
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: 'TODO: Add Description'
      summary: BuildMilestone
      tags:
      - RadarBackend(DevRadar)
      operationId: BuildMilestone
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/BuildMilestoneRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /build/BuildMilestone
          headers:
            Content-Type: application/json
          body: >-
            {

              "BuildRecordID": "112",

              "BuildMilestone": "Released to QA",

              "Username": "jcollin1",

              "Comment": "Test comment"

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: BuildMilestone
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /build/BuildMilestoneHistory:
    get:
      description: 'TODO: Add Description'
      summary: BuildMilestoneHistory
      tags:
      - RadarBackend(DevRadar)
      operationId: BuildMilestoneHistory
      produces:
      - application/json
      parameters:
      - name: BuildRecordId
        in: query
        required: true
        type: integer
        format: int32
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /build/BuildMilestoneHistory?BuildRecordId=1
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: BuildMilestoneHistory
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /build/BuildMilestoneProgressions:
    get:
      description: 'TODO: Add Description'
      summary: BuildMilestoneProgressions
      tags:
      - RadarBackend(DevRadar)
      operationId: BuildMilestoneProgressions
      produces:
      - application/json
      parameters:
      - name: BuildRecordId
        in: query
        required: true
        type: integer
        format: int32
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /build/BuildMilestoneProgressions?BuildRecordId=108
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: BuildMilestoneProgressions
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /build/BuildResult:
    post:
      description: 'TODO: Add Description'
      summary: BuildResult
      tags:
      - RadarBackend(DevRadar)
      operationId: BuildResult
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/BuildResultRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /build/BuildResult
          headers:
            Content-Type: application/json
          body: "{ \r\n  \"BuildRecordID\": \"43\",\r\n  \"BuildResult\": \"Passed\",\r\n  \"BuildComment\": \"No Quality Gate Violations.\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: BuildResult
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /build/HighLevelBuildReport:
    get:
      description: 'TODO: Add Description'
      summary: HighLevelBuildReport
      tags:
      - RadarBackend(DevRadar)
      operationId: HighLevelBuildReport
      produces:
      - application/json
      parameters:
      - name: solutionName
        in: query
        required: true
        type: string
        description: ''
      - name: solutionVersion
        in: query
        required: true
        type: string
        description: ''
      - name: productName
        in: query
        required: true
        type: string
        description: ''
      - name: productVersion
        in: query
        required: true
        type: number
        format: double
        description: ''
      - name: componentName
        in: query
        required: true
        type: string
        description: ''
      - name: componentVersion
        in: query
        required: true
        type: number
        format: double
        description: ''
      - name: buildNumber
        in: query
        required: true
        type: integer
        format: int32
        description: ''
      - name: branch
        in: query
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /build/HighLevelBuildReport?solutionName=Dynamic Endpoint&solutionVersion=1.0.0&productName=ESP&productVersion=11.0&componentName=ESP_UX&componentVersion=11.0&buildNumber=780&branch=trunk
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: HighLevelBuildReport
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /build/BuildSearch:
    get:
      description: 'TODO: Add Description'
      summary: BuildSearch
      tags:
      - RadarBackend(DevRadar)
      operationId: BuildSearch
      produces:
      - application/json
      parameters:
      - name: solutionName
        in: query
        required: true
        type: string
        description: ''
      - name: solutionVersion
        in: query
        required: true
        type: string
        description: ''
      - name: productName
        in: query
        required: true
        type: string
        description: ''
      - name: productVersion
        in: query
        required: true
        type: number
        format: double
        description: ''
      - name: componentName
        in: query
        required: true
        type: string
        description: ''
      - name: componentVersion
        in: query
        required: true
        type: number
        format: double
        description: ''
      - name: milestone
        in: query
        required: true
        type: string
        description: ''
      - name: useExactMilestone
        in: query
        required: true
        type: boolean
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /build/BuildSearch?solutionName=Dynamic Endpoint&solutionVersion=1.0.0&productName=ESP&productVersion=11.0&componentName=ESP_INSTALLER&componentVersion=11.0&milestone=Released to qa&useExactMilestone=false
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: BuildSearch
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /Test/TestRecord:
    post:
      description: 'TODO: Add Description'
      summary: TestRecord
      tags:
      - RadarBackend(DevRadar)
      operationId: TestRecord
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/TestRecordRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /Test/TestRecord
          headers:
            Content-Type: application/json
          body: "{\r\n	\"BuildRecordID\": \"110\",\r\n	\"TestType\": \"BVT\",\r\n    \"Platform\": \"Windows\",\r\n    \"Architecture\": \"x86\",\r\n	\"URL\": \"http://your.test.rig/results/build/100/bvt\",\r\n\r\n	\"Suites\": [\r\n\r\n		{\r\n			\"TestSuiteName\": \"GTI\",\r\n			\"TotalNumberOfTests\": \"100\"\r\n		}, \r\n        {\r\n			\"TestSuiteName\": \"Logger\",\r\n			\"TotalNumberOfTests\": \"14\"\r\n		}\r\n\r\n	]\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: TestRecord
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /Test/TestCaseResult:
    post:
      description: 'TODO: Add Description'
      summary: TestCaseResult
      tags:
      - RadarBackend(DevRadar)
      operationId: TestCaseResult
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/TestCaseResultRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /Test/TestCaseResult
          headers:
            Content-Type: application/json
          body: >-
            {

            	"TestRecordID": "7",

            	"TestSuiteName": "GTI",

            	"TestCaseName": "Test good file",

                "TestCaseResult": "Pass"

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: TestCaseResult
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /test/TestRecordResult:
    post:
      description: 'TODO: Add Description'
      summary: TestRecordResult
      tags:
      - RadarBackend(DevRadar)
      operationId: TestRecordResult
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/TestRecordResultRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /test/TestRecordResult
          headers:
            Content-Type: application/json
          body: >-
            {

              "TestRecordID": "28",

              "TestResult": "Failed"

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: TestRecordResult
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /Test/TestResults:
    get:
      description: 'TODO: Add Description'
      summary: TestResults
      tags:
      - RadarBackend(DevRadar)
      operationId: TestResults
      produces:
      - application/json
      parameters:
      - name: BuildRecordId
        in: query
        required: true
        type: integer
        format: int32
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /Test/TestResults?BuildRecordId=43
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: TestResults
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /Quality/QualityGate:
    post:
      description: 'TODO: Add Description'
      summary: QualityGate(Post)
      tags:
      - RadarBackend(DevRadar)
      operationId: QualityGate(Post)
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Qualitygate(post)request'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /Quality/QualityGate
          headers:
            Content-Type: application/json
          body: "{ \r\n  \"Name\": \"Jimmy\",\r\n  \"Description\": \"# of defects found\",\r\n  \"Type\": \"count\",\r\n  \"Pass\": \"0\",\r\n  \"Fail\": \"15\",\r\n  \"Min\": \"0\",\r\n  \"Max\": \"100\",\r\n  \"Active\": \"1\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: QualityGate(Post)
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /Quality/QualityGateUpdate:
    post:
      description: 'TODO: Add Description'
      summary: QualityGateUpdate
      tags:
      - RadarBackend(DevRadar)
      operationId: QualityGateUpdate
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/QualityGateUpdateRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /Quality/QualityGateUpdate
          headers:
            Content-Type: application/json
          body: "{ \r\n  \"Name\": \"VerDir\",\r\n  \"Description\": \"# of defects found\",\r\n  \"Type\": \"count\",\r\n  \"Pass\": \"0\",\r\n  \"Fail\": \"10\",\r\n  \"Min\": \"0\",\r\n  \"Max\": \"100\",\r\n  \"Active\": \"1\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: QualityGateUpdate
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /Quality/QualityGates:
    get:
      description: 'TODO: Add Description'
      summary: QualityGates
      tags:
      - RadarBackend(DevRadar)
      operationId: QualityGates
      produces:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /Quality/QualityGates
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: QualityGates
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /globalyzer/GlobalyzerResults:
    post:
      description: 'TODO: Add Description'
      summary: GlobalyzerResults
      tags:
      - RadarBackend(DevRadar)
      operationId: GlobalyzerResults
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/GlobalyzerResultsRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /globalyzer/GlobalyzerResults
          headers:
            Content-Type: application/json
          body: >-
            {

                "Project":"Project 1",

                "Language":"English",

                "Version":"10.0.0",

                "ConfigurationType":"Release",

                "ReleaseNumber":"123",

                "ReleaseType":"Main",

                "SVNBranch":"/trunk/main",

                "BuildNumber":"354",

                "Date":"12/07/16 12:0:0",

                "GlobalyzerProjectName":"Test Proj 1",

                "GlobalyzerBasePath":"C:/Projects/L10N/Test/Globalyzer/Results",

                "Scans":[

                    {

                        "Name":"JavaScript",

                        "RuleSetName":"Test projects JavaScript rules",

                        "Language":"JavaScript",

                        "LastScanDate":"12/06/16",

                        "FileCount":963,

                        "LineCount":27362,

                        "Results":[

                            {

                                "Type":"Embedded Strings",

                                "Active":1973,

                                "Ignore":200,

                                "Invalid":195,

                                "StickyIgnore":0,

                                "Resolved":0,

                                "Todo":0,

                                "Filtered":1290

                            },

                            {

                                "Type":"Locale sensitive methods",

                                "Active":50,

                                "Ignore":20,

                                "Invalid":10,

                                "StickyIgnore":10,

                                "Resolved":50,

                                "Todo":0,

                                "Filtered":122

                            }

                        ]

                    },

                    {

                        "Name":"CPlusPlus",

                        "RuleSetName":"Test projects C++ rules",

                        "Language":"C++",

                        "LastScanDate":"12/7/16",

                        "FileCount":1000,

                        "LineCount":100000,

                        "Results":[

                            {

                                "Type":"Embedded Strings",

                                "Active":500,

                                "Ignore":2,

                                "Invalid":0,

                                "StickyIgnore":0,

                                "Resolved":600,

                                "Todo":0,

                                "Filtered":12

                            },

                            {

                                "Type":"Locale sensitive methods",

                                "Active":1234,

                                "Ignore":20,

                                "Invalid":10,

                                "StickyIgnore":10,

                                "Resolved":50,

                                "Todo":0,

                                "Filtered":122

                            }

                        ]

                    }

                ]

            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: GlobalyzerResults
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /build/CodeCoverage:
    post:
      description: 'TODO: Add Description'
      summary: CodeCoverage
      tags:
      - RadarBackend(DevRadar)
      operationId: CodeCoverage
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CodeCoverageRequest'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /build/CodeCoverage
          headers:
            Content-Type: application/json
          body: "{ \r\n  \"BuildRecordID\": \"20\",\r\n  \"Coverage\": \"77%\"\r\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: CodeCoverage
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /build/HighLevelBuildReportsForComponent:
    get:
      description: 'TODO: Add Description'
      summary: HighLevelBuildReportsForComponent
      tags:
      - RadarBackend(DevRadar)
      operationId: HighLevelBuildReportsForComponent
      produces:
      - application/json
      parameters:
      - name: solutionName
        in: query
        required: true
        type: string
        description: ''
      - name: solutionVersion
        in: query
        required: true
        type: string
        description: ''
      - name: productName
        in: query
        required: true
        type: string
        description: ''
      - name: productVersion
        in: query
        required: true
        type: number
        format: double
        description: ''
      - name: componentName
        in: query
        required: true
        type: string
        description: ''
      - name: componentVersion
        in: query
        required: true
        type: number
        format: double
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /build/HighLevelBuildReportsForComponent?solutionName=Dynamic Endpoint&solutionVersion=3.0.0&productName=ESP&productVersion=11.0&componentName=ESP&componentVersion=11.0
          headers:
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: HighLevelBuildReportsForComponent
        x-testDescription: 'TODO: Add Description'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  BuildRecordRequest:
    title: BuildRecordRequest
    type: object
    properties:
      Solution:
        description: ''
        type: string
      SolutionVersion:
        description: ''
        type: string
      Product:
        description: ''
        type: string
      ProductVersion:
        description: ''
        type: string
      Component:
        description: ''
        type: string
      ComponentVersion:
        description: ''
        type: string
      BuildNumber:
        description: ''
        type: string
      BuildMilestone:
        description: ''
        type: string
      Branch:
        description: ''
        type: string
      URL:
        description: ''
        type: string
    required:
    - Solution
    - SolutionVersion
    - Product
    - ProductVersion
    - Component
    - ComponentVersion
    - BuildNumber
    - BuildMilestone
    - Branch
    - URL
  BuildStepRequest:
    title: BuildStepRequest
    type: object
    properties:
      BuildRecordId:
        description: ''
        type: string
      StepName:
        description: ''
        type: string
      StepResult:
        description: ''
        type: string
    required:
    - BuildRecordId
    - StepName
    - StepResult
  VerDirResultsRequest:
    title: VerDirResultsRequest
    type: object
    properties:
      BuildRecordID:
        description: ''
        type: string
      BuildNumber:
        description: ''
        type: string
      FilesAnalyzed:
        description: ''
        type: string
      FailureCount:
        description: ''
        type: string
      Status:
        description: ''
        type: string
      FailureList:
        description: ''
        type: array
        items:
          $ref: '#/definitions/FailureList'
    required:
    - BuildRecordID
    - BuildNumber
    - FilesAnalyzed
    - FailureCount
    - Status
    - FailureList
  FailureList:
    title: FailureList
    type: object
    properties:
      file:
        description: ''
        type: string
      errors:
        description: ''
        type: array
        items:
          type: string
    required:
    - file
    - errors
  CoverityResultsRequest:
    title: CoverityResultsRequest
    type: object
    properties:
      BuildRecordID:
        description: ''
        type: string
      FilesAnalyzed:
        description: ''
        type: string
      TotalLOCAnalyzed:
        description: ''
        type: string
      FunctionsAnalyzed:
        description: ''
        type: string
      PathsAnalyzed:
        description: ''
        type: string
      Duration:
        description: ''
        type: string
      URL:
        description: ''
        type: string
      NewDefectsFound:
        description: ''
        type: string
      OutstandingDefects:
        description: ''
        type: string
      DefectsList:
        description: ''
        type: array
        items:
          $ref: '#/definitions/DefectsList'
    required:
    - BuildRecordID
    - FilesAnalyzed
    - TotalLOCAnalyzed
    - FunctionsAnalyzed
    - PathsAnalyzed
    - Duration
    - URL
    - NewDefectsFound
    - OutstandingDefects
    - DefectsList
  DefectsList:
    title: DefectsList
    type: object
    properties:
      Cid:
        description: ''
        type: string
      Severity:
        description: ''
        type: string
      Classification:
        description: ''
        type: string
      Impact:
        description: ''
        type: string
      File:
        description: ''
        type: string
      Category:
        description: ''
        type: string
      Type:
        description: ''
        type: string
    required:
    - Cid
    - Severity
    - Classification
    - Impact
    - File
    - Category
    - Type
  ArtifactoryUrlRequest:
    title: ArtifactoryUrlRequest
    type: object
    properties:
      BuildRecordID:
        description: ''
        type: string
      ArtifactoryUrl:
        description: ''
        type: string
    required:
    - BuildRecordID
    - ArtifactoryUrl
  BuildMilestoneRequest:
    title: BuildMilestoneRequest
    type: object
    properties:
      BuildRecordID:
        description: ''
        type: string
      BuildMilestone:
        description: ''
        type: string
      Username:
        description: ''
        type: string
      Comment:
        description: ''
        type: string
    required:
    - BuildRecordID
    - BuildMilestone
    - Username
    - Comment
  BuildResultRequest:
    title: BuildResultRequest
    type: object
    properties:
      BuildRecordID:
        description: ''
        type: string
      BuildResult:
        description: ''
        type: string
      BuildComment:
        description: ''
        type: string
    required:
    - BuildRecordID
    - BuildResult
    - BuildComment
  TestRecordRequest:
    title: TestRecordRequest
    type: object
    properties:
      BuildRecordID:
        description: ''
        type: string
      TestType:
        description: ''
        type: string
      Platform:
        description: ''
        type: string
      Architecture:
        description: ''
        type: string
      URL:
        description: ''
        type: string
      Suites:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Suite'
    required:
    - BuildRecordID
    - TestType
    - Platform
    - Architecture
    - URL
    - Suites
  Suite:
    title: Suite
    type: object
    properties:
      TestSuiteName:
        description: ''
        type: string
      TotalNumberOfTests:
        description: ''
        type: string
    required:
    - TestSuiteName
    - TotalNumberOfTests
  TestCaseResultRequest:
    title: TestCaseResultRequest
    type: object
    properties:
      TestRecordID:
        description: ''
        type: string
      TestSuiteName:
        description: ''
        type: string
      TestCaseName:
        description: ''
        type: string
      TestCaseResult:
        description: ''
        type: string
    required:
    - TestRecordID
    - TestSuiteName
    - TestCaseName
    - TestCaseResult
  TestRecordResultRequest:
    title: TestRecordResultRequest
    type: object
    properties:
      TestRecordID:
        description: ''
        type: string
      TestResult:
        description: ''
        type: string
    required:
    - TestRecordID
    - TestResult
  Qualitygate(post)request:
    title: QualityGate(Post)Request
    type: object
    properties:
      Name:
        description: ''
        type: string
      Description:
        description: ''
        type: string
      Type:
        description: ''
        type: string
      Pass:
        description: ''
        type: string
      Fail:
        description: ''
        type: string
      Min:
        description: ''
        type: string
      Max:
        description: ''
        type: string
      Active:
        description: ''
        type: string
    required:
    - Name
    - Description
    - Type
    - Pass
    - Fail
    - Min
    - Max
    - Active
  QualityGateUpdateRequest:
    title: QualityGateUpdateRequest
    type: object
    properties:
      Name:
        description: ''
        type: string
      Description:
        description: ''
        type: string
      Type:
        description: ''
        type: string
      Pass:
        description: ''
        type: string
      Fail:
        description: ''
        type: string
      Min:
        description: ''
        type: string
      Max:
        description: ''
        type: string
      Active:
        description: ''
        type: string
    required:
    - Name
    - Description
    - Type
    - Pass
    - Fail
    - Min
    - Max
    - Active
  GlobalyzerResultsRequest:
    title: GlobalyzerResultsRequest
    type: object
    properties:
      Project:
        description: ''
        type: string
      Language:
        description: ''
        type: string
      Version:
        description: ''
        type: string
      ConfigurationType:
        description: ''
        type: string
      ReleaseNumber:
        description: ''
        type: string
      ReleaseType:
        description: ''
        type: string
      SVNBranch:
        description: ''
        type: string
      BuildNumber:
        description: ''
        type: string
      Date:
        description: ''
        type: string
      GlobalyzerProjectName:
        description: ''
        type: string
      GlobalyzerBasePath:
        description: ''
        type: string
      Scans:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Scan'
    required:
    - Project
    - Language
    - Version
    - ConfigurationType
    - ReleaseNumber
    - ReleaseType
    - SVNBranch
    - BuildNumber
    - Date
    - GlobalyzerProjectName
    - GlobalyzerBasePath
    - Scans
  Scan:
    title: Scan
    type: object
    properties:
      Name:
        description: ''
        type: string
      RuleSetName:
        description: ''
        type: string
      Language:
        description: ''
        type: string
      LastScanDate:
        description: ''
        type: string
      FileCount:
        description: ''
        type: integer
        format: int32
      LineCount:
        description: ''
        type: integer
        format: int32
      Results:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Result'
    required:
    - Name
    - RuleSetName
    - Language
    - LastScanDate
    - FileCount
    - LineCount
    - Results
  Result:
    title: Result
    type: object
    properties:
      Type:
        description: ''
        type: string
      Active:
        description: ''
        type: integer
        format: int32
      Ignore:
        description: ''
        type: integer
        format: int32
      Invalid:
        description: ''
        type: integer
        format: int32
      StickyIgnore:
        description: ''
        type: integer
        format: int32
      Resolved:
        description: ''
        type: integer
        format: int32
      Todo:
        description: ''
        type: integer
        format: int32
      Filtered:
        description: ''
        type: integer
        format: int32
    required:
    - Type
    - Active
    - Ignore
    - Invalid
    - StickyIgnore
    - Resolved
    - Todo
    - Filtered
  CodeCoverageRequest:
    title: CodeCoverageRequest
    type: object
    properties:
      BuildRecordID:
        description: ''
        type: string
      Coverage:
        description: ''
        type: string
    required:
    - BuildRecordID
    - Coverage
