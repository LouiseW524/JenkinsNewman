{
	"id": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
	"name": "Taxonomy(DEV)",
	"description": "Contains all the Radar Taxonomy APIs to run DevRadar",
	"order": [],
	"folders": [
		{
			"id": "7732c2bf-3132-c453-f6e7-2066c96524b0",
			"name": "Taxonomy(DevRadar)",
			"description": "",
			"order": [
				"8028b0b3-0ce0-5191-1651-cc68ebbf5f4e",
				"71a7c752-c696-4dd6-debf-abbe12135db9",
				"734aaddf-5cd2-7de4-fc96-0a5bd54f31db",
				"0ecbfd64-48f2-f878-b366-271b705763f1",
				"c35b028e-3faf-4888-a0da-73e6b9e35afe",
				"946e3ce3-f30c-7ecc-b236-e896b1a24a75",
				"2e1dc2dc-15fa-d760-4a51-26a5c99ef123",
				"e707a605-4a4e-8a59-f4c2-e03f672ef0f7",
				"114d0c4a-ab9b-e9bd-e946-7f42f91c3c08",
				"b87785ae-c31e-450a-af3b-b72df9c600ab",
				"18bc108b-b015-0da4-bc54-6fe2d9ec554e",
				"114677d4-729d-59e1-8bac-d88aaf67dfdc",
				"8dea4fd2-9a7a-63b0-e3a6-8ff5b76d7fbf",
				"e0f3440b-62d9-cfeb-7ac5-729e8d4eca6f",
				"b2929c8f-3bf5-a2a9-4793-73c30b5268c4",
				"9c6e7cef-697e-26a0-c076-1ba3a60e9e93",
				"4fd5dd51-2e04-c871-720c-0b05ae42b3c5",
				"1b50711a-d7b3-03e6-898e-2d32033a7624",
				"a1f55ad5-e78f-e9dd-d573-0ac2624fdc06",
				"827259e0-5dcb-035e-8beb-96900d4e1a10",
				"dd7d54cd-45a1-926c-3bc2-41a694d9ca46"
			],
			"owner": "1802157",
			"collectionId": "6d631d73-8db5-42aa-521e-224fc3650f7e"
		}
	],
	"timestamp": 1493131530532,
	"owner": "1802157",
	"public": false,
	"requests": [
		{
			"id": "0ecbfd64-48f2-f878-b366-271b705763f1",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ComponentShortName?componentID=6",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Components short name\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037903475,
			"name": "ComponentShortName",
			"description": "Purpose: This gets the short name of the component with the given component ID.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "114677d4-729d-59e1-8bac-d88aaf67dfdc",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/ProductVersionValidation?solutionName=Dynamic%20Endpoint&solutionVersion=2.0.0&productName=ESP&productVersion=11.3",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037953634,
			"name": "ProductVersionValidation",
			"description": "Purpose: This validates the given product version exists for the given product, contained in the given solution.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "114d0c4a-ab9b-e9bd-e946-7f42f91c3c08",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ProductLongName?productID=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Product LongName string\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037939066,
			"name": "ProductLongName",
			"description": "Purpose: This gets the long name of the product with the given product ID.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "18bc108b-b015-0da4-bc54-6fe2d9ec554e",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ComponentLongName?componentID=7",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Components long name\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037948522,
			"name": "ComponentLongName",
			"description": "Purpose: This gets the long name of the component with the given component ID.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "1b50711a-d7b3-03e6-898e-2d32033a7624",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/SolutionVersionAsString?solutionID=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Solution Version as string\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037985274,
			"name": "SolutionVersionAsString",
			"description": "Purpose: Gets Solution version for the given solution ID",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "2e1dc2dc-15fa-d760-4a51-26a5c99ef123",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ProductBugzillaName?productid=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037922043,
			"name": "ProductBugzillaName",
			"description": "Purpose: This gets the name of the product in Bugzilla. We store this in the Taxonomy database since they donâ€™t always necessarily match.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "4fd5dd51-2e04-c871-720c-0b05ae42b3c5",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/SolutionTaxonomy?solutionName=Engineering%20Services%20Tools&solutionVersion=1.0.0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \nvar listLength  = jsonData.length;\n\ntest_str = { \"items\":{\"type\" : \"string\"} };\ntest_int = { \"items\":{\"type\" : \"integer\"}};\ntest_arr = { \"items\": {\"type\" :  [\"array\", \"null\"]} };\n   \n    var integers = [jsonData.SolutionID ];\n    var strings = [jsonData.SolutionName, jsonData.SolutionPrimaryOwner, jsonData.SolutionSecondaryOwner, jsonData.SolutionVersion];\n    var arrays = [jsonData.Products];\n    \n    \n    tests[\"Valid Products Return \" ] = (tv4.validate(integers, test_int) && tv4.validate(strings, test_str) && tv4.validate(arrays, test_arr) );\n    \n\ntests[\"Found solution\"] =! responseBody.has(\"Could not find solution\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493990350050,
			"name": "SolutionTaxonomy",
			"description": "Purpose: This returns the taxonomy for the give solution name/version.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": []
		},
		{
			"id": "71a7c752-c696-4dd6-debf-abbe12135db9",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ComponentID?solutionName=Engineering%20Services%20Tools&solutionVersion=1.0.0&productName=Radar&productVersion=1.0&componentName=Radar_API_Tester&componentVersion=1.0.0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_int = { \"items\":{\"type\" : \"integer\"} };\nvar integers = [jsonData.Result];\n\nif(integers > 0){\n    tests[\"Returns ComponentID as integer\" ] =  tv4.validate(integers, test_int);\n    console.log(\"Validation errors: \", tv4.error);\n  \n}\n\ntests[\"Valid Component ID Returned\"] = (integers > 0 );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493990305906,
			"name": "ComponentID",
			"description": "Purpose: This gets the component ID of the component with the given name/version, contained in the given solution/product.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": []
		},
		{
			"id": "734aaddf-5cd2-7de4-fc96-0a5bd54f31db",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/ComponentNameValidation?solutionName=Dynamic%20Endpoint&solutionVersion=2.0.0&productName=ESP&productVersion=11.1&componentName=ESP_UX",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037898308,
			"name": "ComponentNameValidation",
			"description": "Purpose: This validates the given component name is in the given solution/product.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "8028b0b3-0ce0-5191-1651-cc68ebbf5f4e",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ProductVersionAsString?productID=2",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Product Version as string\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037876131,
			"name": "ProductVersionAsString",
			"description": "Purpose: This gets the product version of the product with the given product ID",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"isFromCollection": true,
			"collectionRequestId": "2101d420-65c2-45b6-e778-36aa05537bcd",
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "827259e0-5dcb-035e-8beb-96900d4e1a10",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/Solutions",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody); \nvar listLength  = jsonData.length;\n\ntest_str = { \"items\":{\"type\" : \"string\"} };\ntest_int = { \"items\":{\"type\" : \"integer\"}};\n   \nfor( var i = 0 ; i < listLength; i ++)  {\n \n    var strings = [jsonData[i].SolutionName, jsonData[i].GUID, jsonData[i].SolutionPrimaryOwner, jsonData[i].SolutionSecondaryOwner];\n    var integers = [jsonData[i].SolutionID];\n    tests[\"Valid Schema Milestone \" + i + \" Pass\" ] = (tv4.validate(integers, test_int) && tv4.validate(strings, test_str));\n\n}\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037994886,
			"name": "Solutions",
			"description": "Purpose: This allows the retrieval of the Solution and associated Solution Version data stored in the database.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "8dea4fd2-9a7a-63b0-e3a6-8ff5b76d7fbf",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/Products",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \nvar listLength  = jsonData.length;\n\ntest_str = { \"items\":{\"type\" : \"string\"} };\ntest_strNull = { \"items\":{\"type\" : [\"string\", \"null\"] }};\ntest_int = { \"items\":{\"type\" : \"integer\"}};\ntest_arr = { \"items\": {\"type\" :  [\"array\", \"null\"]} };\n   \nfor( var i = 0 ; i < listLength; i ++)  {\n \n    var integers = [jsonData[i].ProductID, jsonData[i].SolutionID ];\n    var strings = [jsonData[i].GUID, jsonData[i].ProductLongName, jsonData[i].ProductShortName];\n    var stringNull = jsonData[i].ProductBugzillaName;\n    var arrays = [jsonData[i].Components];\n    \n    \n    tests[\"Valid Products Return \" + i ] = (tv4.validate(integers, test_int) && tv4.validate(strings, test_str) && tv4.validate(arrays, test_arr) && tv4.validate(stringNull, test_strNull ) );\n    \n}\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037957340,
			"name": "Products",
			"description": "Purpose: This allows the retrieval of the Product data from the database, along with any associated components",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"isFromCollection": true,
			"collectionRequestId": "7fa95070-09aa-e48a-a631-82058dd26894",
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "946e3ce3-f30c-7ecc-b236-e896b1a24a75",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/ComponentVersionValidation?solutionName=Dynamic%20Endpoint&solutionVersion=2.0.0&productName=ESP&productVersion=11.1&componentName=ESP_UX&componentVersion=11.1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037916902,
			"name": "ComponentVersionValidation",
			"description": "Purpose: This validates the given component version exists for the given component, contained in the given solution/product.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "9c6e7cef-697e-26a0-c076-1ba3a60e9e93",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/SolutionNameValidation?name=Dynamic%20Endpoint",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037973394,
			"name": "SolutionNameValidation",
			"description": "Purpose: This validates that the given solution exists.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "a1f55ad5-e78f-e9dd-d573-0ac2624fdc06",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/SolutionVersionValidation?name=Dynamic%20Endpoint&version=1.0.0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037989796,
			"name": "SolutionVersionValidation",
			"description": "Purpose: This validates the given solution version exists for the given solution name.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "b2929c8f-3bf5-a2a9-4793-73c30b5268c4",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/SolutionName?solutionID=1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Solution Name string\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037968446,
			"name": "SolutionName",
			"description": "Purpose: Get the solution name associated with the given solution ID",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "b87785ae-c31e-450a-af3b-b72df9c600ab",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/validation/ProductNameValidation?solutionName=Engineering%20Services%20Tools&solutionVersion=1.0.0&productName=Radar",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\n\ntest_bool = { \"items\":{\"type\" : \"boolean\"} };\nvar boolean = [jsonData.IsValid];\n\ntests[\"Returns Boolean\" ] =  tv4.validate(boolean, test_bool);\nconsole.log(\"Validation errors: \", tv4.error);\n\ntests[\"Is Valid\"] = responseBody.has(true);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493990392133,
			"name": "ProductNameValidation",
			"description": "Purpose: This validates the given product name exists within the given solution.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": []
		},
		{
			"id": "c35b028e-3faf-4888-a0da-73e6b9e35afe",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ComponentVersionAsString?componentID=6",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_str = { \"items\":{\"type\" : \"string\"} };\nvar strings = [jsonData.Result];\n   \ntests[\"Result Found\"] =! responseBody.has(\"Not Found\");\n\nif(tests[\"Result Found\"]){\n    \n    tests[\"Returns Component Version as string\" ] =  tv4.validate(strings, test_str);\n    console.log(\"Validation errors: \", tv4.error);\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493037908503,
			"name": "ComponentVersionAsString",
			"description": "Purpose: This gets the component version of the component with the given component ID.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "dd7d54cd-45a1-926c-3bc2-41a694d9ca46",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/TaxonomyForClient",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody); \nvar listLength  = jsonData.length;\n\ntest_str = { \"items\":{\"type\" : \"string\"} };\n\n\nfor( var i = 0 ; i < listLength; i ++)  {\n \n    var strings = [jsonData[i].Name, jsonData[i].ID, jsonData[i].Type, jsonData[i].GUID, jsonData[i].Parent];\n\n   \n    tests[\"Valid Schema Pass \"  ] =tv4.validate(strings, test_str) ;\n}\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493038002060,
			"name": "TaxonomyForClient",
			"description": "Purpose: This returns the taxonomy data in a format that is consumable by the client. This is used in the left side navigation menu on the Radar UI.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": [],
			"folder": "7732c2bf-3132-c453-f6e7-2066c96524b0"
		},
		{
			"id": "e0f3440b-62d9-cfeb-7ac5-729e8d4eca6f",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/SolutionID?solutionName=Engineering%20Services%20Tools&solutionVersion=1.0.0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_int = { \"items\":{\"type\" : \"integer\"} };\nvar integers = [jsonData.Result];\n\nif(integers > 0){\n    tests[\"Returns SolutionID as integer\" ] =  tv4.validate(integers, test_int);\n    console.log(\"Validation errors: \", tv4.error);\n  \n}\n\ntests[\"Valid Solution ID Returned\"] = (integers > 0 );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493990630565,
			"name": "SolutionID",
			"description": "Purpose: This gets the Solution ID of the solution with the given name/version.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": []
		},
		{
			"id": "e707a605-4a4e-8a59-f4c2-e03f672ef0f7",
			"headers": "Content-Type: application/json\n",
			"url": "http://devradar.orbit.intel.com:8081/v1/api/query/ProductID?solutionName=Engineering%20Services%20Tools&solutionVersion=1.0.0&productName=Radar&productVersion=1.0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody); \n\ntest_int = { \"items\":{\"type\" : \"integer\"} };\nvar integers = [jsonData.Result];\n\nif(integers > 0){\n    tests[\"Returns ProductID as integer\" ] =  tv4.validate(integers, test_int);\n    console.log(\"Validation errors: \", tv4.error);\n  \n}\n\ntests[\"Valid Product ID Returned\"] = (integers > 0 );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493990595355,
			"name": "ProductID",
			"description": "Purpose: This gets the product ID of the product with the given name/version, contained in the given solution.",
			"collectionId": "a07962af-e7f9-ae7f-94fe-a9081da56dfc",
			"responses": []
		}
	]
}